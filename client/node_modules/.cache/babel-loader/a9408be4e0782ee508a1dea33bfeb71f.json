{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\15019\\\\Book-Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\15019\\\\Book-Search\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport { Kind } from '../language/kinds.mjs';\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\n\nexport function concatAST(documents) {\n  var definitions = [];\n\n  var _iterator = _createForOfIteratorHelper(documents),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var doc = _step.value;\n      definitions.push.apply(definitions, _toConsumableArray(doc.definitions));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    kind: Kind.DOCUMENT,\n    definitions: definitions\n  };\n}","map":{"version":3,"sources":["C:/Users/15019/Book-Search/client/node_modules/graphql/utilities/concatAST.mjs"],"names":["Kind","concatAST","documents","definitions","doc","push","kind","DOCUMENT"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,uBAArB;AACA;;;;;;AAMA,OAAO,SAASC,SAAT,CAAmBC,SAAnB,EAA8B;AACnC,MAAMC,WAAW,GAAG,EAApB;;AADmC,6CAGjBD,SAHiB;AAAA;;AAAA;AAGnC,wDAA6B;AAAA,UAAlBE,GAAkB;AAC3BD,MAAAA,WAAW,CAACE,IAAZ,OAAAF,WAAW,qBAASC,GAAG,CAACD,WAAb,EAAX;AACD;AALkC;AAAA;AAAA;AAAA;AAAA;;AAOnC,SAAO;AACLG,IAAAA,IAAI,EAAEN,IAAI,CAACO,QADN;AAELJ,IAAAA,WAAW,EAAXA;AAFK,GAAP;AAID","sourcesContent":["import { Kind } from '../language/kinds.mjs';\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\n\nexport function concatAST(documents) {\n  const definitions = [];\n\n  for (const doc of documents) {\n    definitions.push(...doc.definitions);\n  }\n\n  return {\n    kind: Kind.DOCUMENT,\n    definitions,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}